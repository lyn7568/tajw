var xmad = function(t, e) {
    function c() {
        function t() {
            return Math.floor(65536 * (1 + Math.random())).toString(16).substring(1);
        }
        var e;
        try {
            if (e = wx.getStorageSync("xmaduuid")) return e;
        } catch (t) {}
        e = t() + t() + t() + t() + t() + t() + t() + t();
        try {
            wx.setStorageSync("xmaduuid", e);
        } catch (t) {}
        return e;
    }
    function n(t) {
        var e = t.currentTarget.dataset.id, n = this.data.xmad;
        n.adData[e].hasshow = !1, this.setData({
            xmad: n
        });
    }
    function i(t) {
        var e = t.currentTarget.dataset.id, n = l[e].curl.replace(/cst=/gi, "cst=" + Date.now());
        n = n.split("?")[1];
        var i = l[e].at;
        if (1 === i) {
            var a = o ? p.h5_path || "/pages/xmadH5" : p.h5_path || "/pages/xmadH5/xmadH5", r = l[e].h5link.replace("?", "|").replace("=", "$");
            r && wx.navigateTo({
                url: a + "?xmadH5url=" + r,
                success: function() {
                    y(n, "v1/api/clk", [ "log", "imp" ], function() {}, "get");
                },
                fail: function() {
                    console.warn("小盟提示：跳转H5广告失败，请在xmadx_conf.js中正确配置h5_path字段。");
                }
            });
        }
        2 === i && (!t.currentTarget.dataset.adImgUrl && (t.currentTarget.dataset.adImgUrl = l[e].appimg), 
        wx.previewImage({
            current: t.currentTarget.dataset.adImgUrl,
            urls: [ t.currentTarget.dataset.adImgUrl ],
            success: function() {
                y(n, "v1/api/clk", [ "log", "imp" ], function() {}, "get");
            }
        })), 3 === i && y(n, "v1/api/clk", [ "log", "imp" ], function() {}, "get"), 1 !== i && 2 !== i && 3 !== i && console.error("SDK错误：跳转类型at为：" + i + "，不是约定的类型。无法进行跳转、点击上报，联系GO工程师！！！");
    }
    function a(e, n, i) {
        if (e[n]) {
            var a = e[n];
            e[n] = function(t) {
                return a.call.apply(a, [ this ].concat(Array.prototype.slice.call(arguments))), 
                i.call(this, t, e);
            };
        } else e[n] = function(t) {
            i.call(this, t, n);
        };
    }
    try {
        var o = "wepy" === t;
    } catch (t) {}
    try {
        var r, s;
        if (t.prototype.constructor.name) "App" === e ? r = t : s = t;
    } catch (t) {}
    var p = require("./xmadx_conf.js"), u = require("./xmadx_MD5.js"), l = {};
    if (!p.app_key || 32 !== p.app_key.length) {
        console.warn("小盟提示：配置错误，请在xmadx_conf.js中正确配置您的app_key。");
        return {
            xmApp: function(t) {
                r ? r(t) : App(t);
            },
            xmPage: function(t) {
                s ? s(t) : Page(t);
            }
        };
    }
    var d = {
        ak: p.app_key.replace(/(^\s*)|(\s*$)/g, ""),
        v: "1.3.7",
        asid: "",
        reqid: "",
        pb: "",
        pm: "",
        sv: "",
        pv: "",
        nt: "",
        ww: 0,
        wh: 0,
        pr: 0,
        long: 0,
        lat: 0,
        wvv: "",
        wv: "",
        lang: "",
        wsr: {},
        pp: "",
        uuid: "",
        user_info: {}
    }, f = 0, h = function(t) {
        function e() {
            4 === n.length && t && (f = 1, t());
        }
        var n = [];
        wx.getSetting({
            success: function(t) {
                t.authSetting["scope.userInfo"] ? wx.getUserInfo({
                    withCredentials: !1,
                    success: function(t) {
                        d.user_info = t.userInfo;
                    },
                    complete: function() {
                        n.push("ok1"), e();
                    }
                }) : (n.push("ok1"), e());
            },
            fail: function() {
                n.push("ok1"), e();
            }
        }), wx.getSystemInfo({
            success: function(t) {
                d.wv = void 0 === t.SDKVersion ? "1.0.0" : t.SDKVersion, d.pb = t.brand, d.pm = t.model, 
                d.pr = t.pixelRatio, d.ww = t.screenWidth, d.wh = t.screenHeight, d.lang = t.language, 
                d.wvv = t.version, d.sv = t.system, d.pv = t.platform;
            },
            complete: function() {
                n.push("ok2"), e();
            }
        }), wx.getSetting({
            success: function(t) {
                t.authSetting["scope.userLocation"] ? wx.getLocation({
                    type: "wgs84",
                    success: function(t) {
                        d.long = t.latitude, d.lat = t.longitude;
                    },
                    complete: function() {
                        n.push("ok3"), e();
                    }
                }) : (n.push("ok3"), e());
            },
            fail: function() {
                n.push("ok3"), e();
            }
        }), wx.getNetworkType({
            success: function(t) {
                d.nt = t.networkType;
            },
            complete: function() {
                n.push("ok4"), e();
            }
        });
    }, x = function(t) {
        wx.setStorageSync("xmwsr", t);
        var e = c();
        d.uuid = e, h();
    }, g = function() {
        var t = this.options.xmadH5url;
        t && (t = t.replace("|", "?").replace("$", "="), this.setData({
            xmadURL: t
        }));
    }, m = function() {
        d.wsr = wx.getStorageSync("xmwsr"), d.pp = this.route;
        try {
            var t = this.data.xmad.ad;
        } catch (t) {}
        if (t) for (var e in t) v(this, t[e]);
    }, w = function(t, e) {
        wx.createSelectorQuery().selectAll(t).boundingClientRect(function(t) {
            if (e) return e(0 < t.length);
        }).exec();
    }, v = function(i, a) {
        return 32 == a.length ? void _(a, [ "engine", "v1/api/ad" ], function(t) {
            if (200 == t.data.code) {
                var n = t.data.data;
                l[a] = n, l[a].hasshow = !0, l[a].id = a, l[a].push = 0, 1 === n.ct && w(".xm_banner", function(t) {
                    return t ? (S.banner_calc(function() {
                        l[a].style = S.banner_style;
                    }), void e()) : (l[a] = "", console.warn("小盟提示：您在js中配置的" + a + '为banner广告，而wxml中没有"xm_banner"代码,请检查'));
                }), 2 === n.ct && w(".xm_insert", function(t) {
                    return t ? (l[a].style = S.screen_style, void e()) : (l[a] = "", console.warn("小盟提示：您在js中配置的" + a + " 为插屏广告，而wxml中没有'xm_insert'代码,请检查"));
                }), 3 === n.ct && w(".xm_fixed", function(t) {
                    return t ? (l[a].style = S.type3, void e()) : (l[a] = "", console.warn("小盟提示：您在js中配置的" + a + " 为悬浮窗广告，而wxml中没有'xm_fixed'代码,请检查"));
                });
                var e = function() {
                    var t = i.data.xmad;
                    t.adData = l, o ? i.xmapply(l) : i.setData({
                        xmad: t
                    });
                    var e = n.iurl.replace(/ist=/gi, "ist=" + Date.now());
                    e = e.split("?")[1], b(i, e, a, n.ct);
                };
            }
        }) : console.warn("广告位ID应为长度为32位，请检查您在js中'xmad'的配置--" + a);
    }, b = function(i, a, r, t) {
        function n() {
            if (1 !== t) y(a, "v1/api/imp", [ "log", "imp" ], function() {}, "get"); else {
                var n = wx.createIntersectionObserver(this, {
                    thresholds: [ .2 ],
                    selectAll: !0
                });
                n.relativeToViewport().observe(".xm_banner", function(t) {
                    var e = i.data.xmad;
                    .2 < t.intersectionRatio && 0 === e.adData[r].push && (e.adData[r].push = 1, i.setData({
                        xmad: e
                    }), y(a, "v1/api/imp", [ "log", "imp" ], function() {}, "get"), n.disconnect());
                });
            }
        }
        wx.createSelectorQuery().selectAll(".xm_component").boundingClientRect(function(t) {
            for (var e = 0; e < t.length; e++) t[e].dataset.id === r && n();
        }).exec();
    }, y = function(t, e) {
        var n = n ? "get" : "post", i = {};
        /imp/.test(e) ? i.iurl = t : i.curl = t;
        var a = 0;
        !function t() {
            wx.request({
                url: "https://log.xmadx.net/" + e,
                data: i,
                method: n ? "post" : "get",
                success: function() {},
                fail: function() {
                    a < 2 && (a++, i.retryTimes = a, setTimeout(function() {
                        t();
                    }, 1e3));
                }
            });
        }();
    }, _ = function(t, e, n, i) {
        0 === f ? h(function() {
            k(t, n, e, i);
        }) : k(t, n, e, i);
    }, k = function(t, e, n, i) {
        i = i ? "get" : "post";
        var a = "https://" + n[0] + ".xmadx.net/";
        if (d.asid = t, d.uuid = c(), "log" != n[0]) {
            var r = Date.now() + d.ak + d.uuid + d.asid;
            d.reqid = u.hexMD5(r);
        }
        var o = 0;
        !function t() {
            wx.request({
                url: a + n[1],
                data: d,
                header: {},
                method: i,
                success: function(t) {
                    e(t);
                },
                fail: function() {
                    o < 2 && (o++, d.retryTimes = o, setTimeout(function() {
                        t();
                    }, 1e3));
                }
            });
        }();
    }, S = {
        banner_style: {
            wrap: "width: 100%; height: 166rpx; overflow: hidden; position: relative;",
            icon: "width: 76rpx!important; height: 24rpx!important; line-height: 24rpx; background: rgba(0, 0, 0, .2); font-size: 16rpx; position: absolute; left: 2rpx; bottom: 2rpx; color: #fff; text-align: center; border-radius: 16rpx;",
            img: "width: 100%; height: 166rpx;",
            nav: "position:absolute;left:0;right:0;top:0;bottom:0;margin:0;background:none;"
        },
        banner_calc: function(n) {
            var i = this;
            wx.getSystemInfo({
                success: function(t) {
                    var e = 166 * t.screenWidth / 582 * 2;
                    i.banner_style.wrap = "width: 100%!important; height:" + e + "rpx; overflow: hidden; position: relative;", 
                    i.banner_style.img = "width: 100%!important; height:" + e + "rpx;", n(i.banner_style);
                }
            });
        },
        screen_style: {
            wrap: "position: fixed; width: 100%; height: 100%; left: 0; top: 0; background: rgba(0, 0, 0, .3); z-index: 9999;",
            content: "position:relative;width: 600rpx!important; height: 500rpx; overflow: hidden; left: calc(50% - 300rpx); top: calc(50% - 250rpx)",
            img: " width: 100%; height: 500rpx!important;",
            close: "position: absolute; right: 0; top: 0; padding: 10rpx; width: 34rpx!important; height: 34rpx!important;z-index:2",
            nav: "position:absolute;left:0;right:0;top:0;bottom:0;margin:0;background:none;",
            icon: "width: 76rpx!important; height: 24rpx!important; line-height: 24rpx; background: rgba(0, 0, 0, .2); font-size: 16rpx; position: absolute; left: 2rpx; bottom: 2rpx; color: #fff; text-align: center; border-radius: 16rpx;"
        },
        type3: {
            wrap: "position: fixed; width: 120rpx!important; height: 120rpx!important; right: 60rpx; bottom: 60rpx; z-index: 9998;",
            img: " width: 100%; height: 100%;",
            nav: "position:absolute;left:0;right:0;top:0;bottom:0;margin:0;background:none;"
        }
    };
    return {
        xmApp: function(t) {
            a(t, "onLaunch", x), r ? r(t) : App(t);
        },
        xmPage: function(t) {
            a(t, "onLoad", m), a(t, "onShow", g), a(t, "xmadClose", n), a(t, "appoIntView", i), 
            s ? s(t) : Page(t);
        }
    };
};

exports.xmad = xmad;